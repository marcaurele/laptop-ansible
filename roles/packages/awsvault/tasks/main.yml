---
- name: check aws-vault releases
  uri:
    url: https://api.github.com/repos/ByteNess/aws-vault/releases/latest
    return_content: true
  register: releases

- name: check aws-vault locally
  become: true
  become_user: "{{ username }}"
  stat:
    path: /usr/local/bin/aws-vault
  register: awsvault_stat

- name: check aws-vault local version
  become: true
  become_user: "{{ username }}"
  command: /usr/local/bin/aws-vault --version
  register: awsvault_version
  changed_when: false
  when: awsvault_stat.stat.exists

- name: install or upgrade aws-vault {{ releases.json.tag_name[1:] }}
  become: true
  get_url:
    dest: "/usr/local/bin/aws-vault"
    mode: 0755
    url: "{{ releases.json |to_json|from_json| json_query('assets[?contains(name, `linux`) && contains(name, `amd64`)].browser_download_url | [0]') }}"
  when:
    - not ansible_check_mode
    - not awsvault_stat.stat.exists or awsvault_version.stderr != releases.json.tag_name

- name: awsvault configuration directory
  become: true
  become_user: "{{ username }}"
  ansible.builtin.file:
    path: "{{ config.zsh }}/awsvault"
    state: directory
  when: ansible_facts.packages["zsh"] is defined

- name: awsvault configuration
  become: true
  become_user: "{{ username }}"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  when: ansible_facts.packages[item.shell] is defined
  loop:
    - src: completion.zsh
      dest: "{{ config.zsh }}/awsvault/completion.zsh"
      shell: zsh
    - src: env.zsh
      dest: "{{ config.zsh }}/awsvault/env.zsh"
      shell: zsh
    - src: completion.fish
      dest: "{{ config.fish }}/completions/aws-vault.fish"
      shell: fish
    - src: env.fish
      dest: "{{ config.fish }}/conf.d/aws-vault.fish"
      shell: fish
