---

- name: check awscli local binary
  stat:
    path: /usr/local/bin/aws
  register: awscli_stat

- name: check local awscli version
  command: /usr/local/bin/aws --version
  register: awscli_version
  when: awscli_stat.stat.exists
  changed_when: false

- name: check awscli tags
  uri:
    url: https://api.github.com/repos/aws/aws-cli/tags
    return_content: yes
  register: awscli_tags
  tags: system

- name: set latest awscli version
  set_fact:
    awscli_latest_version: "{{ awscli_tags.json[0].name }}"
  when: not ansible_check_mode

- name: create temporary directory for install archive
  ansible.builtin.tempfile:
    state: directory
    suffix: awscli
  register: awscli_temp
  when:
    - not ansible_check_mode
    - not awscli_stat.stat.exists or awscli_latest_version not in awscli_version.stdout_lines[0]
  diff: false

- name: download awscli archive {{ awscli_latest_version }}
  ansible.builtin.unarchive:
    dest: "{{ awscli_temp.path }}"
    src: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-{{ awscli_latest_version }}.zip"
    remote_src: true
  register: awscli_download
  diff: false
  when:
    - awscli_temp.path is defined

- name: install awscli {{ awscli_latest_version }}
  become: true
  ansible.builtin.command:
    cmd: "{{ awscli_temp.path }}/aws/install -i /usr/local/aws-cli -b /usr/local/bin"
  when:
    - awscli_temp.path is defined
    - not awscli_stat.stat.exists

- name: upgrade awscli
  become: true
  ansible.builtin.command:
    cmd: "{{ awscli_temp.path }}/aws/install -i /usr/local/aws-cli -b /usr/local/bin --update"
  when:
    - awscli_temp.path is defined
    - awscli_stat.stat.exists

- name: install aws config
  become: yes
  become_user: "{{ username }}"
  template:
    src: aws_config.j2
    dest: "~/.aws/config"
    mode: "0644"
  when: not private_node
