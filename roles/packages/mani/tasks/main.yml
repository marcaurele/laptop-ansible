---

- name: check mani releases
  ansible.builtin.uri:
    url: https://api.github.com/repos/alajmo/mani/releases/latest
    return_content: yes
  register: releases

- name: check if mani is already installed
  ansible.builtin.stat:
    path: /usr/local/bin/mani
  register: mani_stat

- name: check local mani version
  ansible.builtin.command: /usr/local/bin/mani --version
  register: mani_version
  when: mani_stat.stat.exists
  changed_when: false

- name: create temporary directory
  ansible.builtin.tempfile:
    state: directory
  register: mani_temp
  when:
    - not ansible_check_mode
    - not mani_stat.stat.exists or (releases.json.tag_name[1:] not in mani_version.stdout_lines[0])

- name: download mani {{ releases.json.tag_name }}
  ansible.builtin.unarchive:
    src: "{{ releases.json |to_json|from_json| json_query('assets[?contains(name, `linux`) && contains(name, `amd64`)].browser_download_url | [0]') }}"
    remote_src: true
    dest: "{{ mani_temp.path }}"
  diff: false
  when:
    - mani_temp.path is defined

- name: move mani binary
  become: true
  ansible.builtin.copy:
    src: "{{ mani_temp.path }}/mani"
    remote_src: true
    dest: /usr/local/bin/
    owner: root
    group: root
    mode: 0755
  diff: false
  when:
    - mani_temp.path is defined

- name: mani configuration
  ansible.builtin.template:
    src: mani.yml
    dest: "{{ code_directory }}"
    validate: /usr/local/bin/mani check --config %s