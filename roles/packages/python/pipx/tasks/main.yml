---

- name: install/upgrade pipx
  become: true
  apt:
    name: pipx
    state: latest

- name: pipx autocompletion
  become: true
  become_user: "{{ username }}"
  ansible.builtin.template:
    src: completion-pipx.zsh
    dest: "{{ config.zsh }}/python/completion.zsh"

- name: clear pipx installs
  become: true
  become_user: "{{ username }}"
  community.general.pipx:
    state: uninstall_all
  tags:
    - never

- name: clear pipx directory
  become: true
  become_user: "{{ username }}"
  ansible.builtin.file:
    path: "~/.local/pipx"
    state: absent
  tags:
    - never

- name: combine pipx tools to install
  set_fact:
    python_tools: "{{ python_tools + python_tools_extra }}"
  when: python_tools_extra is defined

- name: install tools with pipx
  become: true
  become_user: "{{ username }}"
  community.general.pipx:
    name: "{{ item.name }}"
    state: install
  loop: "{{ python_tools }}"

- name: install extra modules for python tools
  become: true
  become_user: "{{ username }}"
  community.general.pipx:
    name: "{{ item.name }}"
    inject_packages: "{{ item.extra }}"
    state: inject
  loop: "{{ python_tools }}"
  when: item.extra is defined

- name: include package task
  include_tasks: "{{ item.name }}.yml"
  when: "(item.name + '.yml') is file"
  loop: "{{ python_tools }}"
