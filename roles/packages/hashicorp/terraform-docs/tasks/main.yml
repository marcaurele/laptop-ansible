---

- name: check terraform-docs latest release
  ansible.builtin.uri:
    url: https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest
    return_content: yes
  register: releases

- name: check if terraform-docs is already installed
  ansible.builtin.stat:
    path: /usr/local/bin/terraform-docs
  register: tfdocs_stat

- name: check local terraform-docs version
  ansible.builtin.command: /usr/local/bin/terraform-docs --version
  register: tfdocs_version
  when: tfdocs_stat.stat.exists
  changed_when: false

- name: create temporary directory
  ansible.builtin.tempfile:
    state: directory
  register: tfdocs_temp
  when:
    - not ansible_check_mode
    - not tfdocs_stat.stat.exists or (releases.json.tag_name[1:] not in tfdocs_version.stdout_lines[0])

- name: download terraform-docs {{ releases.json.tag_name }}
  ansible.builtin.unarchive:
    src: "{{ releases.json |to_json|from_json| json_query('assets[?contains(name, `linux`) && contains(name, `amd64`)].browser_download_url | [0]') }}"
    remote_src: true
    dest: "{{ tfdocs_temp.path }}"
  diff: false
  when:
    - tfdocs_temp.path is defined

- name: move terraform-docs binary
  become: true
  ansible.builtin.copy:
    src: "{{ tfdocs_temp.path }}/terraform-docs"
    remote_src: true
    dest: /usr/local/bin/
    owner: root
    group: root
    mode: 0755
  diff: false
  when:
    - tfdocs_temp.path is defined

- name: terraform-docs completion
  become: yes
  become_user: "{{ username }}"
  ansible.builtin.shell: "terraform-docs completion zsh > {{ config.zsh }}/hashicorp/_terraform-docs"
  when:
    - tfdocs_temp.path is defined
