# {{ ansible_managed }}

# Default identity
[user]
	name = Marc-Aur√®le Brothier
	email = {{ git.private_email }}
	signingkey = {{ git.private_gpg_signing_key }}
{% if not private_node %}
[includeIf "gitdir:~/code/**/.git"]
	path = .gitconfig_work
[includeIf "gitdir:~/.password-store/.git"]
	path = .gitconfig_work
{% endif %}
[alias]
        co = checkout
        ci = commit
        st = status
        br = branch
	pushmr = push -o merge_request.create
        promote = !$ZSH/bin/git-promote
        wtf     = !$ZSH/bin/git-wtf
        count   = !git shortlog -sn
        please = push --force-with-lease
        commend = commit --amend --no-edit --date=now
        shorty = status --short --branch
        ls = log --graph --pretty=format:\"%C(auto)%h%<(3)%d %s %C(bold blue)(%cr, %an)%Creset%n\" --abbrev-commit --all --find-copies -M --stat
        floge = log --graph --abbrev-commit --decorate --date=relative --all
        flog = log --graph --oneline --decorate --all
        glog = log --graph --pretty=format:\"%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset\" --abbrev-commit --date=relative
        grog = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''             %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	releaselog = log --pretty=oneline --abbrev-commit
	releasetag-rc = tag --annotate -m "üîñ rc-$(date -I)" rc-$(date -I)
	releasetag-v = tag --annotate -m "üîñ v-$(date -I)" v-$(date -I)
[apply]
        whitespace = nowarn
# [blame]
# 	ignoreRevsFile = .git-blame-ignore-revs
[color]
        diff = auto
        status = auto
        branch = auto
        ui = true
[commit]
        gpgsign = true
[core]
	attributesfile = ~/.gitattributes
        excludesfile = ~/.gitignore_global
        editor = vim
[diff]
        compactionHeuristic = true
[difftool]
        prompt = false
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[format]
	signoff = true
[github]
        user = marcaurele
        name = marcaurele
[help]
        autocorrect = 1
[init]
	defaultBranch = main
[mergetool]
        keepBackup = false
[pull]
	rebase = true
[push]
        default = current
	gpgsign = if-asked
[diff "sqlite3"]
        binary = true
        textconv = "echo .dump | sqlite3"
