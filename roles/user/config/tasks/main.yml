---
- name: add authorized ssh keys for {{ username }}
  become: true
  become_user: "{{ username }}"
  ansible.builtin.authorized_key:
    key: https://github.com/marcaurele.keys
    comment: "github user key for marcaurele"
    state: present
    user: "{{ username }}"
  when: private_node
  tags: user

- name: install config dot files
  become: true
  become_user: "{{ username }}"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode | default('0644')}}"
  loop:
    - src: curlrc.j2
      dest: "~/.curlrc"
    - src: gitconfig.j2
      dest: "~/.gitconfig"
    - src: gitignore_global.j2
      dest: "~/.gitignore_global"
    - src: gitattributes.j2
      dest: "~/.gitattributes"
    - src: vimrc.j2
      dest: "~/.vimrc"
    - src: nvim.j2
      dest: "~/.config/nvim/init.vim"
    - src: wgetrc.j2
      dest: "~/.wgetrc"
    - src: ssh_config.j2
      dest: "~ /.ssh/config"
    - src: tmux.conf.j2
      dest: "~/.config/tmux/tmux.conf"
    - src: mpv.conf.j2
      dest: ~/.config/mpv/mpv.conf
    - src: config.fish
      dest: ~/.config/fish/conf.d/user.fish
  tags: user

- include_tasks: gpg.yml

- name: install config dot files on work node
  become: true
  become_user: "{{ username }}"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode | default('0644')}}"
  when: not private_node
  loop:
    - src: gitconfig_work.j2
      dest: "~/.gitconfig_work"

- name: clone projects
  become: true
  become_user: "{{ username }}"
  ansible.builtin.git:
    clone: true
    accept_hostkey: true
    dest: "{{ item.dest }}"
    repo: "{{ item.url }}"
    update: false
    verify_commit: false
  loop: "{{ code_projects }}"
  tags: user
  ignore_errors: true

- name: install custom scripts
  become: true
  ansible.builtin.copy:
    dest: "/usr/local/bin/{{ company }}chat"
    mode: 0755
    owner: root
    group: root
    content: |
      #!/bin/sh -e
      /usr/bin/chromium --profile-directory=Default --app-id=mdpkiolbdkhdjpekfbkbmhigcaggjagi
  when: not private_node

- name: check if MyDrive-foliate directory exists
  become: true
  become_user: "{{ username }}"
  ansible.builtin.stat:
    path: "~/MyDrive/Foliate-settings"
  register: mydrive_foliate
  tags: foliate

- name: configure foliate settings directory to be synced
  become: true
  become_user: "{{ username }}"
  ansible.builtin.file:
    state: link
    force: yes
    src: "~/MyDrive/Foliate-settings"
    dest: "~/.local/share/com.github.johnfactotum.Foliate"
  when:
    - ansible_facts.packages['foliate'] is defined
    - mydrive_foliate.stat.exists
  tags: foliate

- name: copy Solarized theme for vim
  become: true
  become_user: "{{ username }}"
  ansible.builtin.get_url:
    dest: "~/.vim/colors/solarized.vim"
    url: https://github.com/altercation/vim-colors-solarized/raw/master/colors/solarized.vim
